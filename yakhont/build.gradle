/*
 * Copyright (C) 2015-2018 akha, a.k.a. Alexander Kharitonov
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'com.android.library'

apply from:   'preprocessor.gradle'

String verName                  = '0.9.19'
int    verCode                  =    901901

ext {
    publishedName               = 'Yakhont'
    publishedDescription        = 'The high-level Android components for data loading, location, lifecycle callbacks and many more'

    publishedGroupId            = rootProject.ext.projectGroupId
    publishedArtifactId         = 'yakhont'
    publishedPackaging          = 'aar'
    publishedVersion            = verName

    projectDefaultFlavor        = 'core'
    projectJavaDocLinks         = ['http://google.github.io/dagger/api/latest/'             ,
                                   'http://reactivex.io/RxJava/1.x/javadoc/'                ,
                                   'http://reactivex.io/RxJava/2.x/javadoc/'                ,
                                   'http://square.github.io/retrofit/1.x/retrofit/'         ,
                                   'http://square.github.io/retrofit/2.x/retrofit/']
}

ext.libVerDefault               = rootProject.ext.projectLibVerDefault

ext.libVerSupport               = rootProject.ext.projectLibVerSupport
ext.libVerLifecycle             = rootProject.ext.projectLibVerLifecycle
ext.libVerLocation              = rootProject.ext.projectLibVerLocation

ext.libVerRetrofit              = rootProject.ext.projectLibVerRetrofit
ext.libVerRetrofit2             = rootProject.ext.projectLibVerRetrofit2

ext.libVerOkHttp3               = rootProject.ext.projectLibVerOkHttp3
ext.libVerOkHttp                = '2.7.5'

ext.libVerRxJava                = rootProject.ext.projectLibVerRxJava
ext.libVerRxJava2               = rootProject.ext.projectLibVerRxJava2

ext.libVerDagger                = rootProject.ext.projectLibVerDagger

def dependenciesStrategy = { DependencyResolveDetails details ->
    if (details.requested.group == 'com.android.support') {
        details.useVersion          libVerSupport
//      details.because 'To enforce releasable units for Support Libraries'
    }
    if (details.requested.group.startsWith('android.arch.')) {
        details.useVersion          libVerLifecycle
//      details.because 'To enforce releasable units for Support Libraries (arch)'
    }
    if (details.requested.group == 'com.google.android.gms') {
        details.useVersion          libVerLocation
//      details.because 'To enforce releasable units for Google Play Services'
    }
    if (details.requested.group == 'com.squareup.retrofit2') {
        details.useVersion          libVerRetrofit2
//      details.because 'To enforce releasable units for Retrofit 2'
    }
    if (details.requested.group == 'com.squareup.okhttp3') {
        details.useVersion          libVerOkHttp3
//      details.because 'To enforce releasable units for okhttp3'
    }
    if (details.requested.group == 'com.squareup.okhttp') {
        details.useVersion          libVerOkHttp
//      details.because 'To enforce releasable units for okhttp'
    }
    if (details.requested.group == 'com.google.dagger') {
        details.useVersion          libVerDagger
//      details.because 'To enforce releasable units for Dagger 2'
    }
}

//noinspection GroovyMissingReturnStatement
android {
    compileSdkVersion           27
    buildToolsVersion          '27.0.3'

    defaultConfig {
        minSdkVersion           14
        targetSdkVersion        27
        versionCode        verCode
        versionName        verName
    }

    compileOptions {
        sourceCompatibility     JavaVersion.VERSION_1_8
        targetCompatibility     JavaVersion.VERSION_1_8
    }

    flavorDimensions           'common'

    productFlavors {
        core {
            dimension          'common'
        }
        support {   // same as core but based on support library (android.support.v4.app.Fragment etc.)
            dimension          'common'
        }
        full {      // core + support + debug classes for Activities and Fragments
            dimension          'common'
        }
    }

    defaultPublishConfig       'support' + (rootProject.ext.projectDebug == '1' ? 'Debug': 'Release')

    lintOptions {
        abortOnError            false
    }

    dataBinding {
        enabled                 true
    }

    buildTypes {
        release {
            minifyEnabled       rootProject.ext.projectDebug != '1'

            rootProject.ext.projectProGuardFiles.each {
                //noinspection GroovyAssignabilityCheck
                proguardFile            '../proguard/libs/' + it
            }
            proguardFile                './proguard/proguard-consumer.pro'
            proguardFile                './proguard/proguard-project-lib.pro'
            proguardFile                '../proguard/proguard-project.pro'
            //noinspection GroovyAssignabilityCheck
            proguardFile                getDefaultProguardFile('proguard-android.txt')

            consumerProguardFiles       './proguard/proguard-consumer.pro'
        }
    }

    libraryVariants.all { variant ->
        String prefix = variant.getVariantData().getVariantConfiguration().getFlavorName() +
            variant.buildType.name.capitalize()
        configurations.getByName(prefix + 'UnitTestCompileClasspath')              
                                                     .resolutionStrategy.eachDependency dependenciesStrategy
        configurations.getByName(prefix + 'UnitTestRuntimeClasspath')              
                                                     .resolutionStrategy.eachDependency dependenciesStrategy
        variant.getCompileConfiguration()            .resolutionStrategy.eachDependency dependenciesStrategy
        variant.runtimeConfiguration                 .resolutionStrategy.eachDependency dependenciesStrategy
        variant.getAnnotationProcessorConfiguration().resolutionStrategy.eachDependency dependenciesStrategy
    }
    testVariants   .all { variant ->
        variant.getCompileConfiguration()            .resolutionStrategy.eachDependency dependenciesStrategy
        variant.getRuntimeConfiguration()            .resolutionStrategy.eachDependency dependenciesStrategy
    }
}

dependencies {
    // v4 Support Libraries
    // fragment has dependencies on compat, core-utils, core-ui, and media-compat
    api                 "com.android.support:support-fragment:${libVerDefault}"
    api                 "com.android.support:support-compat:${libVerDefault}"
    api                 "com.android.support:support-core-utils:${libVerDefault}"
    api                 "com.android.support:support-core-ui:${libVerDefault}"
    api                 "com.android.support:support-media-compat:${libVerDefault}"
    // v7 Support Libraries
    // appcompat (includes support for material design) depends on the v4 Support Library
    api                 "com.android.support:appcompat-v7:${libVerDefault}"
    api                 "com.android.support:recyclerview-v7:${libVerDefault}"
    // v13 Support Library (support for the Fragment with the FragmentCompat)
    api                 "com.android.support:support-v13:${libVerDefault}"

    api                 "com.android.support:support-annotations:${libVerDefault}"
    api                 "com.android.support:design:${libVerDefault}"
    api                 "com.google.android.gms:play-services-location:${libVerDefault}"
    api                 "android.arch.lifecycle:common-java8:${libVerDefault}"
    api                 "android.arch.lifecycle:extensions:${libVerDefault}"

    // for debug package only
    fullApi             "com.android.support:leanback-v17:${libVerDefault}"
    fullApi             "com.android.support:mediarouter-v7:${libVerDefault}"
    fullApi             "com.android.support:preference-v14:${libVerDefault}"
    fullApi             "com.android.support:preference-leanback-v17:${libVerDefault}"

    api                 "com.google.dagger:dagger:${libVerDefault}"             // Dagger 2
    annotationProcessor "com.google.dagger:dagger-compiler:${libVerDefault}"

    api                 "com.squareup.picasso:picasso:2.5.2"                    // Picasso

    api                ("com.squareup.retrofit2:retrofit:${libVerDefault}") {   // Retrofit
        exclude group:  "com.squareup.okhttp3", module: "okhttp"
    }
    api                 "com.squareup.retrofit2:converter-gson:${libVerDefault}"

    api                 "com.squareup.okhttp3:okhttp:${libVerDefault}"
    api                 "com.squareup.okhttp3:logging-interceptor:${libVerDefault}"

    api                 "com.squareup.retrofit2:adapter-rxjava:${libVerDefault}"
    api                 "com.squareup.retrofit2:adapter-rxjava2:${libVerDefault}"

    api                 "com.squareup.retrofit:retrofit:${libVerRetrofit}"

    api                 "com.squareup.okhttp:okhttp:${libVerDefault}"
    api                 "com.squareup.okhttp:okhttp-urlconnection:${libVerDefault}"

    api                 "io.reactivex.rxjava2:rxjava:${libVerRxJava2}"          // Rx
    api                 "io.reactivex:rxjava:${libVerRxJava}"
}

apply from: '../publish.gradle'
